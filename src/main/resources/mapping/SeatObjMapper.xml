<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wydxda.seat.mapper.SeatObjMapper">
    <resultMap id="BaseResultMap" type="com.wydxda.seat.model.SeatObj">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="x" jdbcType="INTEGER" property="x"/>
        <result column="y" jdbcType="INTEGER" property="y"/>
        <result column="row" jdbcType="VARCHAR" property="row"/>
        <result column="col" jdbcType="VARCHAR" property="col"/>
        <result column="room_num" jdbcType="INTEGER" property="roomNum"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="flag" jdbcType="INTEGER" property="flag"/>
        <result column="templete_id" jdbcType="VARCHAR" property="templeteId"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="insertSeat">
        insert into ls_seats (x, y,row,col,room_num,type,flag,templete_id,create_time,update_time)
        values
        <foreach collection="seatList" index="index" item="item" separator=",">
            (
            #{item.x},
            #{item.y},
            #{item.row},
            #{item.col},
            #{seatTemplete.roomNum},
            #{item.type},
            #{item.flag},
            #{seatTemplete.id},
            now(),
            now()
            )
        </foreach>
    </insert>

    <delete id="deleteByIdList">
        delete from ls_seats WHERE id in
        <foreach collection="idList" index="index" item="item" open="("
                 separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 查询座位列表前 更新每个座位的 使用状态 超时后 -> 空座 -->
    <update id="updateSeatsType">
        update ls_seats
        set type=0,release_time=NULL,reader_openid=NULL
        where type!=0
        and TIMESTAMPDIFF(SECOND,release_time,now())>0
        and templete_id = #{templeteId}
    </update>

    <!-- 使用座位 更新座位状态 -->
    <update id="updateSeat">
        update ls_seats
        set type=#{type},release_time=(now()+interval #{duration} minute),reader_openid=#{openid}
        where id=#{id}
    </update>

    <select id="findByTempleteId" resultMap="BaseResultMap">
        select * from ls_seats WHERE templete_id = #{templeteId}
    </select>

    <select id="findById" resultMap="BaseResultMap">
        select * from ls_seats WHERE id = #{id}
    </select>


    <resultMap id="NowSeatResultMap" type="com.wydxda.seat.model.SeatNow">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="department" jdbcType="VARCHAR" property="department"/>
        <result column="professional" jdbcType="VARCHAR" property="professional"/>
        <result column="class_name" jdbcType="VARCHAR" property="className"/>
        <result column="uid" jdbcType="INTEGER" property="uId"/>
        <result column="grade" jdbcType="INTEGER" property="grade"/>
        <result column="remainder_time" property="remainderTime" jdbcType="TIME"/>
    </resultMap>

    <select id="getNowSeatInfo" resultMap="NowSeatResultMap">
        select t1.id,t1.type,t2.id uid,t2.url,t2.name,t2.nickname,t2.sex,t2.department,t2.professional,t2.class_name,t2.grade,SEC_TO_TIME(t1.release_time-now()) remainder_time
        from ls_seats t1,ls_readers t2
        where t1.reader_openid=t2.openid
        and t1.type!=0
        and t1.id=#{id}
    </select>

</mapper>